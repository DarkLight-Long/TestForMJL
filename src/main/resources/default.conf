# http {

#     # 自定义变量 $connection_upgrade 需添加到跟配置文件
#     map $http_upgrade $connection_upgrade {
#         default keep-alive;#默认为keep-alive 可以支持一般请求
#         'websocket' upgrade;#如果为websocket 则为upgrade 可升级的
#     }

    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        # location /tim/approval/ {
        #     proxy_pass http://172.20.29.192:8080/tim/approval/;
        # }

        # location /tim/sys/thirdLogin/ {
        #     proxy_pass http://172.20.29.192:8080/sys/thirdLogin/;
        # }

        location /tim/ {
            proxy_pass http://192.168.137.1:8080/tim/;
            # allow 172.20.29.192;
            # allow 127.0.0.1;
            # allow 172.17.0.1;
            # deny all;

            # 转发websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;#此处即上边定义变量
            proxy_set_header Connection $connection_upgrade;
            client_max_body_size 10m;
        }
        location = /test.html {
            root /usr/share/nginx/html/test;
        }
        location = /WW_verify_YRzG2pGyGFDTqF8M.txt {  
            root /usr/share/nginx/html;
        }

        location = /123.txt {
            root /usr/share/nginx/html;
        }

        location /mydemo/ {
            proxy_pass http://172.20.29.192:8001/mydemo/;
            # 用处： 乾坤微应用转发 =》 待考证
            # proxy_set_header Host $host:$server_port;
        }

        #貌似是图床的用法
        #重定向时 链接后面加/
        location /h5 {
            alias   /usr/share/nginx/html/daily;
            # root /usr/share/nginx/html/daily/;
            index  index.html index.htm;
            # 当用户在浏览器直接访问 http://oursite.com/user/id 就会返回 404
            try_files $uri $uri/ /h5/index.html;
            # 建议使用 $request_uri, $request_uri会对特殊字符编码，避免CLRF攻击
        }

        location / {
            root   /usr/share/nginx/html/tim-ehr;
            index  index.html index.htm;
            # 当用户在浏览器直接访问 http://oursite.com/user/id 就会返回 404
            
            # try_files $uri $uri/ /index.html;
            if (!-e $request_filename) { 
                rewrite ^(.*)$ /index.html last;
                break;
            }

            # allow 172.20.29.192;
            # allow 127.0.0.1;
            # allow 172.17.0.1;
            # deny all;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
# }
